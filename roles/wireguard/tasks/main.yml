---
- name: Install Raspberry Pi kernel headers
  apt:
    name: raspberrypi-kernel-headers
    state: latest
  become: yes
  tags: wireguard

- name: Enable IPv4 and IPv6 forwarding
  sysctl:
    name: '{{ item.name }}'
    value: '{{ item.val }}'
    sysctl_set: yes
    reload: yes
    state: present
  become: yes
  with_items:
    - { name: net.ipv4.ip_forward, val: 1 }
    - { name: net.ipv6.conf.all.forwarding, val: 1 }
  tags:
    - wireguard
    - network

- name: Enable unstable packages repository
  apt_repository:
    repo: deb http://deb.debian.org/debian/ unstable main
    filename: unstable
    state: present
  become: yes
  tags: wireguard

- name: Limit unstable packages
  blockinfile:
    path: /etc/apt/preferences.d/limit-unstable
    owner: root
    group: root
    mode: '0644'
    create: yes
    block: |
      Package: *
      Pin: release a=unstable
      Pin-Priority: 150
  become: yes
  tags: wireguard

- name: Install Wireguard PGP keys
  apt_key:
    keyserver: keyserver.ubuntu.com
    id: '{{ item }}'
    state: present
  become: yes
  with_items:
    - 8B48AD6246925553
    - 7638D0442B90D010
    - 04EE7237B7D453EC
  tags: wireguard

- name: Install Wireguard
  apt:
    name: wireguard
    state: latest
    update_cache: yes
  become: yes
  register: apt_wireguard
  tags: wireguard

- name: Restart system to load new Wireguard kernel modules
  reboot:
  become: yes
  when: apt_wireguard.changed
  tags:  wireguard

- name: Ensure Wireguard directory exists properly
  file:
    path: /etc/wireguard
    owner: root
    group: root
    mode: '0700'
    state: directory
  become: yes
  tags: wireguard

- name: Install/Update Wireguard interface configurations
  template:
    src: wireguard.conf.j2
    dest: '/etc/wireguard/{{ item.interface }}.conf'
    owner: root
    group: root
    mode: '0600'
  become: yes
  with_items: '{{ wireguard_interfaces }}'
  register: wireguard_configs
  tags: wireguard

- name: Restart Wireguard interfaces to load new configuration changes
  systemd:
    name: 'wg-quick@{{ item.item.interface }}'
    state: restarted
    daemon_reload: yes
  become: yes
  when: item.changed
  with_items: '{{ wireguard_configs.results }}'
  loop_control:
    label: '{{ item.item.interface }}'
  tags: wireguard

- name: Ensure Wireguard interface services are enabled and running
  systemd:
    name: 'wg-quick@{{ item.interface }}'
    enabled: yes
    state: started
  become: yes
  with_items: '{{ wireguard_interfaces }}'
  loop_control:
    label: '{{ item.interface }}'
  tags: wireguard
