# {{ ansible_managed }}
# Created on: {{ ansible_date_time.date }} {{ ansible_date_time.time }}

# Allow users of this group to interact with dhcpcd via the control socket.
#controlgroup wheel

# Inform the DHCP server of our hostname for DDNS.
hostname

# Use the hardware address of the interface for the Client ID.
clientid
# or
# Use the same DUID + IAID as set in DHCPv6 for DHCPv4 ClientID as per RFC4361.
# Some non-RFC compliant DHCP servers do not reply with this set.
# In this case, comment out duid and enable clientid above.
#duid

# Persist interface configuration when dhcpcd exits.
persistent

# Rapid commit support.
# Safe to enable by default because it requires the equivalent option set
# on the server to actually work.
option rapid_commit

# A list of options to request from the DHCP server.
option domain_name_servers, domain_name, domain_search, host_name
option classless_static_routes
# Respect the network MTU. This is applied to DHCP routes.
option interface_mtu

# Most distributions have NTP support.
#option ntp_servers

# A ServerID is required by RFC2131.
require dhcp_server_identifier

# Generate SLAAC address using the Hardware Address of the interface
#slaac hwaddr
# OR generate Stable Private IPv6 Addresses based from the DUID
slaac private

{% for i in raspi_static_interfaces %}
# Static interface {{ i.interface }}
interface {{ i.interface }}
    static ip_address={{ i.ip_address }}
{% if ('ip6_address' in i) and (i.ip6_address | length > 0) %}
    static ip6_address={{ i.ip6_address }}
{% endif %}
{% if ('routers' in i) and (i.routers | length > 0) %}
    static routers={{ i.routers | join(" ") }}
{% endif %}
{% if ('domain_name_servers' in i) and (i.domain_name_servers | length > 0) %}
    static domain_name_servers={{ i.domain_name_servers | join(" ") }}
{% endif %}
{% endfor %}